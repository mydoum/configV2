# My bashrc archive commands
# ---------------------------------------------------------------------------

# ============================================
# 0. CARREFOUR REMINDER
# ============================================
echo '[WORKSPACES]'
echo 'phenix-local-workspace'
echo 'phenix-docker-workspace'
echo 'crm-workspace'
echo ''

phenix-local-workspace-start() {
  echo '[START] Initializing the workspace'
  zookeeper-server-start /usr/local/etc/kafka/zookeeper.properties & kafka-server-start /usr/local/etc/kafka/server.properties
}

phenix-local-workspace-stop() {
  echo '[STOP] zookeeper & kafka stopped'
  kafka-server-stop /usr/local/etc/kafka/server.properties
  zookeeper-server-stop /usr/local/etc/kafka/zookeeper.properties
}

phenix-docker-workspace-start() {
  echo '[START] Docker images'
  sourceb
  cd $HOME/Projects/transactions-extractor/ && docker-compose up
}

phenix-docker-workspace-stop() {
  echo '[STOP] Docker images'
  cd $HOME/Projects/transactions-extractor/ && docker-compose down
}

# ============================================
# 0_1. EXPORT PROXY CONF
# ============================================
wifi_SSID="WLAN60"

export PHENIX_USER_NAME=$(whoami)
export PHENIX_USER_ID=$(id -u)
export PHENIX_GROUP_ID=$(id -g)

export no_proxy='localhost'

sbt_proxy() {
  local repo_location=$HOME/.sbt/repositories
  local cred_location=$HOME/.sbt/0.13/plugins/credentials.sbt

  case $1 in
    true)
      local is_on=".old"
      local is_off=""
      ;;
    false)
      local is_on=""
      local is_off=".old"
      ;;
  esac

  local missing_repo_file=${repo_location}${is_off}
  local present_repo_file=${repo_location}${is_on}
  local missing_cred_file=${cred_location}${is_off}
  local present_cred_file=${cred_location}${is_on}

  if [[ ! -f ${missing_repo_file} ]] && [[ -f ${present_repo_file} ]]; then
    mv ${present_repo_file} ${missing_repo_file}
  fi

  if [[ ! -f ${missing_cred_file} ]] && [[ -f ${present_cred_file} ]]; then
    mv ${present_cred_file} ${missing_cred_file}
  fi
}

proxy_on() {
  local airport=/System/Library/PrivateFrameworks/Apple80211.framework
  local command=/Versions/Current/Resources/airport

  if [[ $($airport$command -I | awk '/ SSID/ {print substr($0, index($0, $2))}') \
    == ${wifi_SSID} ]]; then
    echo "[PROXY ON]"
    export http_proxy=http://${proxy_user}:${proxy_password}@${proxy}:${proxy_port}
    export https_proxy=${http_proxy}

    export SBT_OPTS="-Dhttp.proxyHost=$proxy  \
      -Dhttp.proxyPort=$proxy_port            \
      -Dhttp.proxyUser=$proxy_user            \
      -Dhttp.proxyPassword=$proxy_password    \
      -Dhttp.nonProxyHosts=${no_proxy//,/|}   \
      -Dhttps.proxyHost=$proxy                \
      -Dhttps.proxyPort=$proxy_port           \
      -Dhttps.proxyUser=$proxy_user           \
      -Dhttps.proxyPassword=$proxy_password   \
      -Dhttps.nonProxyHosts=${no_proxy//,/|}"

    export JAVA_OPTS="-Dhttp.proxyHost=$proxy \
      -Dhttp.proxyPort=$proxy_port            \
      -Dhttp.proxyUser=$proxy_user            \
      -Dhttp.proxyPassword=$proxy_password    \
      -Dhttp.nonProxyHosts=${no_proxy//,/|}"

    export GIT_SSH_COMMAND="ssh -o ProxyCommand=\"socat \
      -PROXY:$proxy:%h:%p,proxyport=$proxy_port,proxyauth=$proxy_user:$proxy_password\""

    export DOCKER_RUN_PROXY="-e https_proxy=$https_proxy -e \
    http_proxy=$http_proxy -e no_proxy=$no_proxy"

    sbt_proxy true
  else
    echo "[PROXY OFF]"
  fi
}

proxy_off() {
  echo "[PROXY OFF]"
  unset http_proxy
  unset https_proxy
  unset SBT_OPTS
  unset JAVA_OPTS
  unset GIT_SSH_COMMAND
  unset DOCKER_RUN_PROXY
  sbt_proxy false
}

# ============================================
# 1. DEVMENCIA REMINDER
# ============================================

crm-workspace-start() {
  echo '[START] Initializing the workspace'
  cd $HOME/Projects/api-omnirique-client && node . &
  cd $HOME/Projects/personal-crm; npm start &
}

crm-workspace-stop() {
  echo '[STOP] CRM KILLED'
  kill -9 $(lsof -ti :3001)
  kill -9 $(lsof -ti :3000)
}
